
type Query {
    allBooks: [Book]
    findOne(id: ID!): Book
    allPerson: [Person]
    allPeoplePaged(page: Int, size: Int): [Person]
}

type Mutation {
    createPerson(input: CreatePersonInput!): Person!
    updatePerson(input: UpdatePersonInput!): Person!
    updatePersonById(id: Int, phoneNumber: String): Person!
    deletePerson(id: Int): Int
}

#Input for creating new Person
input CreatePersonInput {
    firstName: String!
    lastName: String!
    phoneNumber: String!
    email: String!
    address: AddressInput
}

#Input for updating Person
input UpdatePersonInput {
    id: ID!
    firstName: String
    lastName: String
    phoneNumber: String
    email: String
    address: AddressInput
}

#Input for Address
input AddressInput {
    address: String
    city: String
    state: String
    zip: String
}

type Person {
    id: ID!
    firstName: String
    lastName: String
    email: String
    phoneNumber: String
    address: Address
}

type Address {
    id: ID!
    address: String
    city: String
    state: String
    zip: String
}

type Book {
    id: ID!
    title: String
    pages: Int
    rating: Rating
    author: Author

}

type Rating {
    star: String
}

type Author {
    id: ID!
    firstName: String
    lastName: String
}